# -*- coding: utf-8 -*-
"""Machine Learning-2 Assignment-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rnWs73izuLCNP_yIg6x5l7DJANm11LcH
"""

import numpy as np

class MPNeuron:
    def __init__(self):
        pass
    def AND(self,array):
        if np.sum(array) == len(array):
            return 1
        else:
            return 0

    def OR(self,array):
        if np.sum(array) > 0:
            return 1
        else:
            return 0

    def NOT(self,value):
        if value == 1:
            return 0
        else:
            return 1

    def NAND(self,array):
        return self.NOT(self.AND(array))

    def NOR(self,array):
        return self.NOT(self.OR(array))

    def XOR(self,array):
        if np.sum(array) > 0 and np.sum(array) < len(array):
            return 1
        else:
            return 0

    def XNOR(self,array):
        return self.NOT(self.XOR(array))

inputs = [[1,1],[1,0],[0,1],[0,0]]
m = MPNeuron()
print("\t  LOGIC TABLE ")
print("| Input|AND|NAND| OR |XNOR|XOR|")
for inp in inputs:
    print(f"|{inp}| {m.AND(inp)} | {m.NAND(inp)}  | {m.OR(inp)}  | {m.XNOR(inp)}  | {m.XOR(inp)} |")

print("\n")
print(" LOGIC TABLE for NOT gate")
print("|Input|Output|")
for value in inputs[1]:
    print(f"|{value}    |  {m.NOT(value)}   |")
